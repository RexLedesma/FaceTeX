{
  "_args": [
    [
      {
        "raw": "mathjax-node@^1.0.0",
        "scope": null,
        "escapedName": "mathjax-node",
        "name": "mathjax-node",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/RexLedesma/Documents/University of Maryland/Projects/FaceTeX/node_modules/mathjax-node-svg2png"
    ]
  ],
  "_from": "mathjax-node@>=1.0.0 <2.0.0",
  "_id": "mathjax-node@1.0.1",
  "_inCache": true,
  "_location": "/mathjax-node",
  "_nodeVersion": "4.8.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mathjax-node-1.0.1.tgz_1491558636377_0.9091077949851751"
  },
  "_npmUser": {
    "name": "mathjax",
    "email": "manager@mathjax.org"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mathjax-node@^1.0.0",
    "scope": null,
    "escapedName": "mathjax-node",
    "name": "mathjax-node",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mathjax-node-svg2png"
  ],
  "_resolved": "https://registry.npmjs.org/mathjax-node/-/mathjax-node-1.0.1.tgz",
  "_shasum": "756ca144326626b9fa489ca06d47f6bcbb3422ca",
  "_shrinkwrap": null,
  "_spec": "mathjax-node@^1.0.0",
  "_where": "/Users/RexLedesma/Documents/University of Maryland/Projects/FaceTeX/node_modules/mathjax-node-svg2png",
  "bugs": {
    "url": "http://github.com/mathjax/MathJax-node/issues"
  },
  "dependencies": {
    "jsdom": "7.0 - 9.8",
    "mathjax": "*"
  },
  "description": "API's for calling MathJax from node.js",
  "devDependencies": {
    "tape": "^4.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "756ca144326626b9fa489ca06d47f6bcbb3422ca",
    "tarball": "https://registry.npmjs.org/mathjax-node/-/mathjax-node-1.0.1.tgz"
  },
  "gitHead": "b5139730a5ce072031a7c5e20694be460a2f0a11",
  "homepage": "https://github.com/mathjax/MathJax-node#readme",
  "keywords": [
    "MathJax",
    "math",
    "svg",
    "HTML",
    "MathML",
    "TeX",
    "AsciiMath"
  ],
  "license": "Apache-2.0",
  "main": "./lib/main.js",
  "maintainers": [
    {
      "name": "MathJax Consortium",
      "email": "info@mathjax.org",
      "url": "http://www.mathjax.org"
    }
  ],
  "name": "mathjax-node",
  "optionalDependencies": {},
  "readme": "# mathjax-node [![Build Status](https://travis-ci.org/mathjax/MathJax-node.svg?branch=develop)](https://travis-ci.org/mathjax/MathJax-node)\n\nThis repository contains a library that provides an API to call [MathJax](https://github.com/mathjax/mathjax) from Node.js programs. The API converts individual math expressions (in any of MathJax's input formats) into HTML (with CSS), SVG or MathML code.\n\nUse\n\n```\nnpm install mathjax-node\n```\n\nto install mathjax-node and its dependencies.\n\n**Note:**\n\nmathjax-node requires Node.js v4 or later.\n\n**Breaking Changes in v1.0:**\n\n\nmathjax-node v1.0 makes breaking changes to the following features from the pre-releases.\n\n- [CHANGED] `lib/mj-single.js` has been renamed to `lib/main.js` (and set as `main` in `package.json`, i.e., `require('mathjax-node')` will load it.\n- [REMOVED] `lib/mj-page.js` (API for processing HTML-fragments) and related CLI tools\n- [REMOVED] speech-rule-engine integration\n- [REMOVED] PNG generation\n- [REMOVED] CLI tools in `bin/`\n\nThese features can easily be recreated in separate modules for greater flexibility. For examples, see\n\n- [mathjax-node-cli](https://github.com/mathjax/mathjax-node-cli/)\n- [mathjax-node-page](https://github.com/pkra/mathjax-node-page/)\n- [mathjax-node-sre](https://github.com/pkra/mathjax-node-sre)\n- [mathjax-node-svg2png](https://github.com/pkra/mathjax-node-svg2png)\n\nBe sure to also check out other [projects on NPM that depend on mathjax-node](https://www.npmjs.com/browse/depended/mathjax-node).\n\n# Getting started\n\nmathjax-node provides a library, `./lib/main.js`. Below is a very minimal example for using it - the tests and the examples mentioned above provide more advanced examples.\n\n```javascript\n// a simple TeX-input example\nvar mjAPI = require(\"mathjax-node\");\nmjAPI.config({\n  MathJax: {\n    // traditional MathJax configuration\n  }\n});\nmjAPI.start();\n\nvar yourMath = 'E = mc^2';\n\nmjAPI.typeset({\n  math: yourMath,\n  format: \"TeX\", // \"inline-TeX\", \"MathML\"\n  mml:true, //  svg:true,\n}, function (data) {\n  if (!data.errors) {console.log(data.mml)}\n  // will produce:\n  // <math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\">\n  //   <mi>E</mi>\n  //   <mo>=</mo>\n  //   <mi>m</mi>\n  //   <msup>\n  //     <mi>c</mi>\n  //     <mn>2</mn>\n  //   </msup>\n  // </math>\n});\n```\n\n## Documentation\n\nmathjax-node exports three methods, `config`, `start`, `typeset`.\n\n### `config(options)`\n\nThe `config` method is used to set _global_ configuration options. Its default options are\n\n```javascript\n{\n  displayMessages: false, // determines whether Message.Set() calls are logged\n  displayErrors:   true, // determines whether error messages are shown on the console\n  undefinedCharError: false, // determines whether \"unknown characters\" (i.e., no glyph in the configured fonts) are saved in the error array\n  extensions: '', // a convenience option to add MathJax extensions\n  fontURL: 'https://cdn.mathjax.org/mathjax/latest/fonts/HTML-CSS', // for webfont urls in the CSS for HTML output\n  MathJax: { } // standard MathJax configuration options, see https://docs.mathjax.org for more detail.\n}\n```\n\n**Note.** Changes to these options require a restart of the API using the `start()` method (see below).\n\n### `start()`\n\nThe `start` method start (and restarts) mathjax-node. This allows reconfiguration.\n\n**Note.** This is done automatically when `typeset` is first called (see below).\n\n### `typeset(options, callback)`\n\nThe `typeset` method is the main method of mathjax-node. It expects a configuration object `input` and a `callback`.\n\nOnce called, `typeset` can be called repeatedly and will optionally store information across calls (see `state` below).\n\nThe following are the default input options.\n\n```javascript\n{\n  ex: 6,                          // ex-size in pixels\n  width: 100,                     // width of container (in ex) for linebreaking and tags\n  useFontCache: true,             // use <defs> and <use> in svg output?\n  useGlobalCache: false,          // use common <defs> for all equations?\n  linebreaks: false,              // automatic linebreaking\n  equationNumbers: \"none\",        // automatic equation numbering (\"none\", \"AMS\" or \"all\")\n\n  math: \"\",                       // the math string to typeset\n  format: \"TeX\",                  // the input format (TeX, inline-TeX, AsciiMath, or MathML)\n  xmlns: \"mml\",                   // the namespace to use for MathML\n\n  html: false,                    // generate HTML output\n  htmlNode: false,                // generate HTML output as jsdom node\n  css: false,                     // generate CSS for HTML output\n  mml: false,                     // generate MathML output\n  mmlNode: false,                 // generate MathML output as jsdom node\n  svg: false,                     // generate SVG output\n  svgNode: false,                 // generate SVG output as jsdom node\n\n  speakText: true,                // add textual alternative (for TeX/asciimath the input string, for MathML a dummy string)\n\n  state: {},                    // an object to store information from multiple calls (e.g., <defs> if useGlobalCache, counter for equation numbering if equationNumbers ar )\n  timeout: 10 * 1000,             // 10 second timeout before restarting MathJax\n}\n```\n\n### `callback(result, options)`\n\nmathjax-node returns two objects to the `callback`: a `result` object as well as the original input `options`.\n\nThe `result` object will contain (at most) the following structure:\n\n```javascript\n{\n  errors:                     // an array of MathJax error messages if any errors occurred\n  mml:                        // a string of MathML markup if requested\n  mmlNode:                    // a jsdom node of MathML markup if requested\n  html:                       // a string of HTML markup if requested\n  htmlNode:                   // a jsdom node of HTML markup if requested\n  css:                        // a string of CSS if HTML was requested\n  svg:                        // a string of SVG markup if requested\n  svgNode:                    // a jsdom node of SVG markup if requested\n  style:                      // a string of CSS inline style if SVG requested\n  height:                     // a string containing the height of the SVG output if SVG was requested\n  width:                      // a string containing the width of the SVG output if SVG was requested\n  speakText:                  // a string of speech text if requested\n\n  state: {                    // the state object (if useGlobalCache or equationNumbers is set)\n           glyphs:            // a collection of glyph data\n           defs :             // a string containing SVG def elements\n           AMS: {\n                startNumber:  // the current starting equation number\n                labels:       // the set of labels\n                IDs:          // IDs used in previous equations\n             }\n         }\n}\n```\n\nThe `options` contains the configuration object passed to `typeset`; this can be useful for passing other data along or for identifying which `typeset()` call is associated with this `callback` call (in case you use the same `callback` function for more than one `typeset()`).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mathjax/MathJax-node.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.0.1"
}
